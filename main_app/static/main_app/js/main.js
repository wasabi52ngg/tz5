// JavaScript –¥–ª—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –∏–º–ø–æ—Ä—Ç–∞/—ç–∫—Å–ø–æ—Ä—Ç–∞ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤

document.addEventListener('DOMContentLoaded', function() {
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
    initFileUpload();
    initExportPeriodToggle();
    initTooltips();
    initProgressBars();
});

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤
function initFileUpload() {
    const fileInput = document.getElementById('id_file');
    const uploadArea = document.querySelector('.file-upload-area');
    
    if (!fileInput || !uploadArea) return;
    
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–ª–∏–∫–∞ –ø–æ –æ–±–ª–∞—Å—Ç–∏ –∑–∞–≥—Ä—É–∑–∫–∏
    uploadArea.addEventListener('click', function() {
        fileInput.click();
    });
    
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ —Ñ–∞–π–ª–∞
    fileInput.addEventListener('change', function(e) {
        const file = e.target.files[0];
        if (file) {
            updateUploadArea(file);
        }
    });
    
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ drag & drop
    uploadArea.addEventListener('dragover', function(e) {
        e.preventDefault();
        uploadArea.classList.add('dragover');
    });
    
    uploadArea.addEventListener('dragleave', function(e) {
        e.preventDefault();
        uploadArea.classList.remove('dragover');
    });
    
    uploadArea.addEventListener('drop', function(e) {
        e.preventDefault();
        uploadArea.classList.remove('dragover');
        
        const files = e.dataTransfer.files;
        if (files.length > 0) {
            fileInput.files = files;
            updateUploadArea(files[0]);
        }
    });
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ–±–ª–∞—Å—Ç–∏ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞
function updateUploadArea(file) {
    const uploadArea = document.querySelector('.file-upload-area');
    const icon = uploadArea.querySelector('.file-upload-icon');
    const text = uploadArea.querySelector('.file-upload-text');
    const hint = uploadArea.querySelector('.file-upload-hint');
    
    if (file) {
        icon.innerHTML = 'üìÑ';
        text.textContent = file.name;
        hint.textContent = `–†–∞–∑–º–µ—Ä: ${formatFileSize(file.size)}`;
        uploadArea.style.borderColor = '#28a745';
        uploadArea.style.backgroundColor = '#d4edda';
    }
}

// –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–∞ —Ñ–∞–π–ª–∞
function formatFileSize(bytes) {
    if (bytes === 0) return '0 Bytes';
    
    const k = 1024;
    const sizes = ['Bytes', 'KB', 'MB', 'GB'];
    const i = Math.floor(Math.log(bytes) / Math.log(k));
    
    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –ø–µ—Ä–∏–æ–¥–∞ —ç–∫—Å–ø–æ—Ä—Ç–∞
function initExportPeriodToggle() {
    const periodRadios = document.querySelectorAll('input[name="export_period"]');
    const dateRangeFields = document.querySelector('.date-range-fields');
    
    if (!periodRadios.length || !dateRangeFields) return;
    
    periodRadios.forEach(radio => {
        radio.addEventListener('change', function() {
            if (this.value === 'custom') {
                dateRangeFields.classList.add('show');
            } else {
                dateRangeFields.classList.remove('show');
            }
        });
    });
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ–¥—Å–∫–∞–∑–æ–∫
function initTooltips() {
    const tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
    tooltipTriggerList.map(function (tooltipTriggerEl) {
        return new bootstrap.Tooltip(tooltipTriggerEl);
    });
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä–æ–≤
function initProgressBars() {
    const progressBars = document.querySelectorAll('.progress-bar');
    progressBars.forEach(bar => {
        const width = bar.getAttribute('data-width');
        if (width) {
            setTimeout(() => {
                bar.style.width = width + '%';
            }, 100);
        }
    });
}

// –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏–Ω–Ω–µ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
function showLoadingSpinner() {
    const spinner = document.querySelector('.loading-spinner');
    if (spinner) {
        spinner.style.display = 'block';
    }
}

// –°–∫—Ä—ã—Ç—å —Å–ø–∏–Ω–Ω–µ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
function hideLoadingSpinner() {
    const spinner = document.querySelector('.loading-spinner');
    if (spinner) {
        spinner.style.display = 'none';
    }
}

// –ü–æ–∫–∞–∑–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
function showNotification(message, type = 'info') {
    const alertClass = `alert-${type}`;
    const alertHtml = `
        <div class="alert ${alertClass} alert-dismissible fade show" role="alert">
            ${message}
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    `;
    
    const container = document.querySelector('.container');
    if (container) {
        container.insertAdjacentHTML('afterbegin', alertHtml);
        
        // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–∫—Ä—ã—Ç—å —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥
        setTimeout(() => {
            const alert = container.querySelector('.alert');
            if (alert) {
                alert.remove();
            }
        }, 5000);
    }
}

// –í–∞–ª–∏–¥–∞—Ü–∏—è —Ñ–æ—Ä–º—ã –∏–º–ø–æ—Ä—Ç–∞
function validateImportForm() {
    const fileInput = document.getElementById('id_file');
    const file = fileInput.files[0];
    
    if (!file) {
        showNotification('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞', 'warning');
        return false;
    }
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–∑–º–µ—Ä–∞ —Ñ–∞–π–ª–∞ (10 –ú–ë)
    const maxSize = 10 * 1024 * 1024;
    if (file.size > maxSize) {
        showNotification('–†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞ –Ω–µ –¥–æ–ª–∂–µ–Ω –ø—Ä–µ–≤—ã—à–∞—Ç—å 10 –ú–ë', 'danger');
        return false;
    }
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è —Ñ–∞–π–ª–∞
    const allowedExtensions = ['.csv', '.xlsx'];
    const fileExtension = file.name.toLowerCase().substring(file.name.lastIndexOf('.'));
    
    if (!allowedExtensions.includes(fileExtension)) {
        showNotification('–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è —Ç–æ–ª—å–∫–æ —Ñ–∞–π–ª—ã CSV –∏ XLSX', 'danger');
        return false;
    }
    
    return true;
}

// –í–∞–ª–∏–¥–∞—Ü–∏—è —Ñ–æ—Ä–º—ã —ç–∫—Å–ø–æ—Ä—Ç–∞
function validateExportForm() {
    const period = document.querySelector('input[name="export_period"]:checked');
    
    if (!period) {
        showNotification('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –ø–µ—Ä–∏–æ–¥ —ç–∫—Å–ø–æ—Ä—Ç–∞', 'warning');
        return false;
    }
    
    if (period.value === 'custom') {
        const dateFrom = document.getElementById('id_date_from');
        const dateTo = document.getElementById('id_date_to');
        
        if (!dateFrom.value || !dateTo.value) {
            showNotification('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –¥–∞—Ç—ã –Ω–∞—á–∞–ª–∞ –∏ –æ–∫–æ–Ω—á–∞–Ω–∏—è –ø–µ—Ä–∏–æ–¥–∞', 'warning');
            return false;
        }
        
        if (new Date(dateFrom.value) >= new Date(dateTo.value)) {
            showNotification('–î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –º–µ–Ω—å—à–µ –¥–∞—Ç—ã –æ–∫–æ–Ω—á–∞–Ω–∏—è', 'warning');
            return false;
        }
    }
    
    return true;
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã –∏–º–ø–æ—Ä—Ç–∞
document.addEventListener('submit', function(e) {
    if (e.target.id === 'import-form') {
        if (!validateImportForm()) {
            e.preventDefault();
            return false;
        }
        showLoadingSpinner();
    }
    
    if (e.target.id === 'export-form') {
        if (!validateExportForm()) {
            e.preventDefault();
            return false;
        }
        showLoadingSpinner();
    }
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ AJAX
document.addEventListener('ajaxError', function(e) {
    hideLoadingSpinner();
    showNotification('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞', 'danger');
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —É—Å–ø–µ—à–Ω–æ–≥–æ AJAX
document.addEventListener('ajaxSuccess', function(e) {
    hideLoadingSpinner();
});

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
function updateStats() {
    fetch('/api/stats/')
        .then(response => response.json())
        .then(data => {
            // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
            const statsElements = document.querySelectorAll('.stats-number');
            statsElements.forEach(element => {
                const statType = element.getAttribute('data-stat');
                if (data[statType] !== undefined) {
                    element.textContent = data[statType];
                }
            });
        })
        .catch(error => {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:', error);
        });
}

// –ê–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∫–∞–∂–¥—ã–µ 30 —Å–µ–∫—É–Ω–¥
setInterval(updateStats, 30000);

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞
function copyToClipboard(text) {
    navigator.clipboard.writeText(text).then(function() {
        showNotification('–°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–æ –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞', 'success');
    }, function(err) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–∏: ', err);
        showNotification('–ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞', 'danger');
    });
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è
document.addEventListener('click', function(e) {
    if (e.target.classList.contains('copy-btn')) {
        const text = e.target.getAttribute('data-copy');
        if (text) {
            copyToClipboard(text);
        }
    }
});

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞ —Ç–∞–±–ª–∏—Ü—ã –≤ CSV
function exportTableToCSV(tableId, filename) {
    const table = document.getElementById(tableId);
    if (!table) return;
    
    let csv = [];
    const rows = table.querySelectorAll('tr');
    
    for (let i = 0; i < rows.length; i++) {
        const row = [];
        const cols = rows[i].querySelectorAll('td, th');
        
        for (let j = 0; j < cols.length; j++) {
            let cellText = cols[j].innerText;
            // –≠–∫—Ä–∞–Ω–∏—Ä—É–µ–º –∫–∞–≤—ã—á–∫–∏
            cellText = cellText.replace(/"/g, '""');
            // –û–±–æ—Ä–∞—á–∏–≤–∞–µ–º –≤ –∫–∞–≤—ã—á–∫–∏ –µ—Å–ª–∏ —Å–æ–¥–µ—Ä–∂–∏—Ç –∑–∞–ø—è—Ç—É—é –∏–ª–∏ –∫–∞–≤—ã—á–∫—É
            if (cellText.includes(',') || cellText.includes('"')) {
                cellText = '"' + cellText + '"';
            }
            row.push(cellText);
        }
        csv.push(row.join(','));
    }
    
    // –°–æ–∑–¥–∞–µ–º –∏ —Å–∫–∞—á–∏–≤–∞–µ–º —Ñ–∞–π–ª
    const csvContent = csv.join('\n');
    const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });
    const link = document.createElement('a');
    
    if (link.download !== undefined) {
        const url = URL.createObjectURL(blob);
        link.setAttribute('href', url);
        link.setAttribute('download', filename);
        link.style.visibility = 'hidden';
        document.body.appendChild(link);
        link.click();
        document.body.removeChild(link);
    }
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫ —ç–∫—Å–ø–æ—Ä—Ç–∞ —Ç–∞–±–ª–∏—Ü
document.addEventListener('click', function(e) {
    if (e.target.classList.contains('export-table-btn')) {
        const tableId = e.target.getAttribute('data-table');
        const filename = e.target.getAttribute('data-filename') || 'export.csv';
        exportTableToCSV(tableId, filename);
    }
});
